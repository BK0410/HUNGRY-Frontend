{"ast":null,"code":"import { model } from 'model';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nimport * as i2 from \"@angular/router\";\nexport let BackendService = /*#__PURE__*/(() => {\n  class BackendService {\n    constructor(_http, router) {\n      this._http = _http;\n      this.router = router;\n      this.apiurl = model.ip + \"/api/getSingleUser\";\n      this.categoryurl = model.ip + \"/api/users/category\";\n      this.restauranturl = model.ip + \"/api/users/restaurant\";\n      this.userurl = model.ip + \"/api/users/user\";\n      this.dishurl = model.ip + \"/api/users/dish\";\n    }\n\n    signup(user) {\n      return this._http.post(model.ip + \"/api/users/signup\", user);\n    }\n\n    token(Email_ID, refreshToken) {\n      return this._http.post(model.ip + \"/api/users/token\", {\n        Email_ID,\n        refreshToken\n      }, {\n        responseType: 'json'\n      });\n    }\n\n    addCategory(category) {\n      return this._http.post(model.ip + \"/api/users/addCategory\", category);\n    }\n\n    addRestaurant(restaurant) {\n      return this._http.post(model.ip + \"/api/users/addRestaurant\", restaurant);\n    }\n\n    addDish(dish) {\n      return this._http.post(model.ip + \"/api/users/addDish\", dish);\n    }\n\n    setToken(token) {\n      localStorage.setItem('token', token);\n    }\n\n    logout() {\n      localStorage.removeItem('token');\n      this.router.navigate(['login']);\n    }\n\n    login(Email_ID, Password) {\n      return this._http.post(model.ip + \"/api/users/login\", {\n        Email_ID,\n        Password\n      }, {\n        responseType: 'json'\n      });\n    }\n\n    adminlogin(Email_ID, Password) {\n      return this._http.post(model.ip + \"/api/users/adminlogin\", {\n        Email_ID,\n        Password\n      }, {\n        responseType: 'json'\n      });\n    }\n\n    address(user) {\n      return this._http.post(model.ip + \"/api/users/address\", user);\n    }\n\n    isLoggedIn() {\n      return this.getToken() !== null;\n    }\n\n    getToken() {\n      // console.log(localStorage.getItem('token'))\n      return localStorage.getItem('token');\n    }\n\n    getSingleUser() {\n      return this._http.get(model.ip + \"/api/users/getSingleUser\");\n    }\n\n    getSingleRestauarant(id) {\n      return this._http.get(model.ip + \"/api/users/getSingleRestaurant\");\n    }\n\n    getCategories() {\n      return this._http.get(model.ip + \"/api/users/getCategories\");\n    }\n\n    getUsers() {\n      return this._http.get(model.ip + \"/api/users/getUsers\");\n    }\n\n    getFoodTable() {\n      return this._http.get(model.ip + \"/api/users/getFoodTable\");\n    }\n\n    getRestaurants() {\n      return this._http.get(model.ip + \"/api/users/getRestaurants\");\n    }\n\n    addToCart(user) {\n      return this._http.post(model.ip + \"/api/users/addToCart\", user);\n    }\n\n    addOrderDetails(user) {\n      return this._http.post(model.ip + \"/api/users/addOrderDetails\", user);\n    }\n\n    getUserOrderDetails() {\n      return this._http.get(model.ip + \"/api/users/getUserOrderDetails\");\n    }\n\n    deleteCategory(id) {\n      let ids = id;\n      window.location.reload();\n      return this._http.delete(`${this.categoryurl}/${ids}`);\n    }\n\n    updateCategory(user, id) {\n      let ids = id;\n      return this._http.put(`${this.categoryurl}/${ids}`, user);\n    }\n\n    deleteRestaurant(id) {\n      let ids = id;\n      window.location.reload();\n      return this._http.delete(`${this.restauranturl}/${ids}`);\n    }\n\n    deleteUser(id) {\n      let ids = id;\n      window.location.reload();\n      return this._http.delete(`${this.userurl}/${ids}`);\n    }\n\n    updateRestaurant(restaurant, id) {\n      let ids = id;\n      window.location.reload();\n      return this._http.put(`${this.restauranturl}/${ids}`, restaurant);\n    }\n\n    updateUser(user, id) {\n      let ids = id;\n      return this._http.put(`${this.apiurl}/${ids}`, user);\n    }\n\n    deleteDish(id) {\n      let ids = id;\n      window.location.reload();\n      return this._http.delete(`${this.dishurl}/${ids}`);\n    }\n\n    updateDish(user, id) {\n      let ids = id;\n      return this._http.put(`${this.dishurl}/${ids}`, user);\n    }\n\n  }\n\n  BackendService.ɵfac = function BackendService_Factory(t) {\n    return new (t || BackendService)(i0.ɵɵinject(i1.HttpClient), i0.ɵɵinject(i2.Router));\n  };\n\n  BackendService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: BackendService,\n    factory: BackendService.ɵfac,\n    providedIn: 'root'\n  });\n  return BackendService;\n})();","map":null,"metadata":{},"sourceType":"module"}