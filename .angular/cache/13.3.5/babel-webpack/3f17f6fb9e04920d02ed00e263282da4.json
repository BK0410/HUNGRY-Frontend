{"ast":null,"code":"import { trigger, state, style, animate, transition } from '@angular/animations';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"../backend.service\";\nimport * as i2 from \"@angular/router\";\nexport let TestComponent = /*#__PURE__*/(() => {\n  class TestComponent {\n    constructor(userSer, router) {\n      this.userSer = userSer;\n      this.router = router;\n      this.searchText = '';\n      this.showDiv = {\n        previous: false,\n        current: false,\n        next: false\n      };\n      this.buttonTextState = 'shown'; // The text currently being show\n\n      this.buttonText = \"ADD TO CART\"; // The text that will be shown when the transition is finished\n\n      this.transitionButtonText = \"ADD TO CART\";\n      this.display = false;\n    }\n\n    ngOnInit() {\n      this.userSer.getFoodTable().subscribe(res => {\n        console.log(res, \"res==>\");\n        this.categories = res;\n      });\n    }\n\n    logout() {\n      localStorage.removeItem('token');\n      this.router.navigate(['login']);\n    }\n    /**\r\n     * Respond to the transition event of the button text\r\n     * by setting the text awaiting transition then setting the state as shown\r\n     */\n\n\n    buttonTextTransitioned(event) {\n      this.buttonText = this.transitionButtonText;\n      this.buttonTextState = this.buttonTextState = 'shown';\n    }\n\n    onAddToCart() {\n      // Kick off the first transition\n      this.buttonTextState = 'transitioning';\n      this.transitionButtonText = 'ADDING...'; // Do whatever logic here. If it is asynchronous, put the remaining code in your subscribe/then callbacks\n      // Note if your logic is snappy, you could leave the timeouts in to simulate the animation for a better UX\n\n      setTimeout(() => {\n        this.buttonTextState = 'transitioning';\n        this.transitionButtonText = 'ADDED';\n      }, 1800); // Reset button text\n\n      setTimeout(() => {\n        this.buttonTextState = 'transitioning';\n        this.transitionButtonText = 'ADD TO CART';\n      }, 3600);\n    }\n\n    toggleText() {\n      var x = document.getElementById(\"Myid\");\n\n      if (x.style.display === \"none\") {\n        x.style.display = \"block\";\n      } else {\n        x.style.display = \"none\";\n      }\n    }\n\n    clickfn() {\n      if (!this.display) {\n        this.display = true;\n      }\n    }\n\n    unclickfn() {\n      this.display = false;\n    }\n\n  }\n\n  TestComponent.ɵfac = function TestComponent_Factory(t) {\n    return new (t || TestComponent)(i0.ɵɵdirectiveInject(i1.BackendService), i0.ɵɵdirectiveInject(i2.Router));\n  };\n\n  TestComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: TestComponent,\n    selectors: [[\"app-test\"]],\n    decls: 40,\n    vars: 0,\n    consts: [[\"id\", \"myBtnContainer\"], [\"onclick\", \"filterSelection('all')\", 1, \"btn\", \"active\"], [\"onclick\", \"filterSelection('cars')\", 1, \"btn\"], [\"onclick\", \"filterSelection('animals')\", 1, \"btn\"], [\"onclick\", \"filterSelection('fruits')\", 1, \"btn\"], [\"onclick\", \"filterSelection('colors')\", 1, \"btn\"], [1, \"container\"], [1, \"filterDiv\", \"cars\"], [1, \"filterDiv\", \"colors\", \"fruits\"], [1, \"filterDiv\", \"colors\"], [1, \"filterDiv\", \"cars\", \"animals\"], [1, \"filterDiv\", \"animals\"], [1, \"filterDiv\", \"fruits\"], [1, \"filterDiv\", \"fruits\", \"animals\"]],\n    template: function TestComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"h2\");\n        i0.ɵɵtext(1, \"Filter DIV Elements\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(2, \"div\", 0)(3, \"button\", 1);\n        i0.ɵɵtext(4, \" Show all\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(5, \"button\", 2);\n        i0.ɵɵtext(6, \" Cars\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(7, \"button\", 3);\n        i0.ɵɵtext(8, \" Animals\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(9, \"button\", 4);\n        i0.ɵɵtext(10, \" Fruits\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(11, \"button\", 5);\n        i0.ɵɵtext(12, \" Colors\");\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelementStart(13, \"div\", 6)(14, \"div\", 7);\n        i0.ɵɵtext(15, \"BMW\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(16, \"div\", 8);\n        i0.ɵɵtext(17, \"Orange\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(18, \"div\", 7);\n        i0.ɵɵtext(19, \"Volvo\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(20, \"div\", 9);\n        i0.ɵɵtext(21, \"Red\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(22, \"div\", 10);\n        i0.ɵɵtext(23, \"Mustang\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(24, \"div\", 9);\n        i0.ɵɵtext(25, \"Blue\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(26, \"div\", 11);\n        i0.ɵɵtext(27, \"Cat\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(28, \"div\", 11);\n        i0.ɵɵtext(29, \"Dog\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(30, \"div\", 12);\n        i0.ɵɵtext(31, \"Melon\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(32, \"div\", 13);\n        i0.ɵɵtext(33, \"Kiwi\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(34, \"div\", 12);\n        i0.ɵɵtext(35, \"Banana\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(36, \"div\", 12);\n        i0.ɵɵtext(37, \"Lemon\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(38, \"div\", 11);\n        i0.ɵɵtext(39, \"Cow\");\n        i0.ɵɵelementEnd()();\n      }\n    },\n    styles: [\".filterDiv[_ngcontent-%COMP%]{float:left;background-color:#2196f3;color:#fff;width:100px;line-height:100px;text-align:center;margin:2px;display:none}.show[_ngcontent-%COMP%]{display:block}.container[_ngcontent-%COMP%]{margin-top:20px;overflow:hidden}.btn[_ngcontent-%COMP%]{border:none;outline:none;padding:12px 16px;background-color:#f1f1f1;cursor:pointer}.btn[_ngcontent-%COMP%]:hover{background-color:#ddd}.btn.active[_ngcontent-%COMP%]{background-color:#666;color:#fff}\"],\n    data: {\n      animation: [trigger('buttonTextStateTrigger', [state('shown', style({\n        opacity: 1\n      })), state('transitioning', style({\n        opacity: 0.3\n      })), transition('shown => transitioning', animate('600ms ease-out')), transition('transitioning => shown', animate('600ms ease-in'))])]\n    }\n  });\n  return TestComponent;\n})();","map":null,"metadata":{},"sourceType":"module"}